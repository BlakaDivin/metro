#!/usr/bin/python -OO

import os,sys,imp,string,getopt
import pdb

__maintainer__="Daniel Robbins <drobbins@funtoo.org>"
__version__="2112.0 funtoo"

# we need to define this here because we need to add a module to our path so we can load the config file in /etc
sharedir="/usr/lib/catalyst"

def usage():
	print "Usage catalyst [options] specfile1 [specfile2...]"
	print " -d --debug		enable debugging"
	print " -h --help		print this help message"
	print " -V --version		display version information"
	print " -v --verbose		verbose output"
	print
	print "Usage examples:"
	print
	print "Using the specfile option (-f, --file) to build a stage target:"
	print "catalyst stage1-specfile.spec"

def version():
	print "Catalyst, version "+__version__
	print "Copyright 2003-2007 Gentoo Foundation"
	print "Copyright 2008 Funtoo Technologies, LLC"
	print "Distributed under the GNU General Public License version 2\n"

def parse_config(myconfig):
	# FOR COMPATIBILITY THIS IS GOOD - drobbins
	for opt in [ "ccache", "distcc", "icecream", "kerncache", "pkgcache", "purge", "metadata_overlay", "envscript" ]:
		if opt in string.split(settings["options"]):
			print opt,"support enabled."
			settings[opt.upper()]="1"

def run_target(target):
	targetfn=os.path.join(sharedir+"/targets/"+target+".py")
	if not os.path.exists(targetfn):
		raise CatalystError, "Target "+target+" not found at "+targetfn
	fh=open(targetfn)
	module=imp.load_module(target,fh,"targets/"+target+".py",(".py","r",imp.PY_SOURCE))
	fh.close()
	print "Registered target",target
	targetobj=module.me(settings)
	targetobj.run()

if __name__ == "__main__":
	version()
	if os.getuid() != 0:
		# catalyst cannot be run as a normal user due to chroots, mounts, etc
		print "!!! catalyst: This script requires root privileges to operate"
		sys.exit(2)

	# we need some options in order to work correctly
	if len(sys.argv) < 2:
		usage()
		sys.exit(2)

	# parse out the command line arguments
	try:
		opts,args = getopt.getopt(sys.argv[1:], "dhvV", ["debug","help", "verbose", "version" ])
	except getopt.GetoptError:
		usage()
		sys.exit(2)
	
	# defaults for commandline opts
	debug=False
	verbose=False
	myopts=[]

	# check preconditions
	if len(args) == 0:
		print "!!! catalyst: please specify at least one file to read\n"
		usage()
		sys.exit(2)

	for opt,optarg in opts:
		if opt in ("-h","--help"):
			usage()
			sys.exit(1)
		if o in ("-V", "--version"):
			print "Catalyst version "+__version__
			sys.exit(1)
		if o in ("-d", "--debug"):
			debug=True
			print "DEBUG: opts",opts
			print "DEBUG: args",args
		if o in ("-v","--verbose"):
			verbose=True

	# import configuration file and import our main module using those settings
	sys.path.append(sharedir+"/modules")
	from catalyst_support import *
	import flexdata

	settings=flexdata.collection()
	settings["catalyst_version"]=__version__
	settings["sharedir"]=sharedir
	# grab config file
	settings.collect("/etc/catalyst/catalyst.conf")
	settings.debugdump("right after reading config")

	#PARSE THE SPEC HERE
	for arg in args:
		settings.collect(arg)


	if not settings.has_key("target"):
		raise CatalystError("Please specify a target.")
	
	try:
		run_target(settings["target"])
	except CatalystError:
		print
		print "Catalyst aborting...."
		sys.exit(2)
	except KeyboardInterrupt:
		print "\nCatalyst build aborted due to user interrupt ( Ctrl-C )"
		print
		print "Catalyst aborting...."
		sys.exit(2)
	except:
		print "Catalyst aborting...."
		raise
		sys.exit(2)
