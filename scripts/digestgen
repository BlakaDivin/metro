#!/usr/bin/python3

import fnmatch
import os
import sys
from subprocess import call
print("Generating hashes...")
links = []
for root, dirnames, filenames in os.walk('/home/mirror/funtoo'):
	for filename in fnmatch.filter(filenames, '*.tar.*'):
		if filename[-4:] == ".txt":
			continue
		p = os.path.join(root, filename)
		if os.path.islink(p):
			links.append(os.path.join(dirnames,p))
			continue
		if not os.path.exists(p+".hash.txt"):
			sys.stdout.write('.')
			sys.stdout.flush()
			call("PATH=/bin/:/usr/bin echo sha256 $(sha256sum %s | cut -f1 -d' ') > %s.hash.txt" % ( p, p ), shell=True)
		else:
			sys.stdout.write('e')
			sys.stdout.flush()
for link in links:
	abs_realpath = os.path.normpath(os.path.join(os.path.dirname(link),os.readlink(link)))
	if os.path.lexists(link + ".hash.txt"):
		os.unlink(link + ".hash.txt")
	if os.path.exists(abs_realpath + ".hash.txt"):
		os.symlink(os.readlink(link) + ".hash.txt", link + ".hash.txt")
	else:
		print((link + " dead"))

print()
print("Cleaning up old hashes...")
for root, dirnames, filenames in os.walk('/home/mirror/funtoo'):
	for filename in fnmatch.filter(filenames, '*.hash.txt'):
		p = os.path.join(root, filename)
		ptar = p[:-9]
		if not os.path.exists(ptar):
			os.unlink(p)
			sys.stdout.write('.')
			sys.stdout.flush()

print()
print("Done!")
