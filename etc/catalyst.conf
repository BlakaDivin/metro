# /etc/catalyst/catalyst.conf

# Simple desriptions of catalyst settings. Please refer to the online
# documentation for more information.

# Creates a .DIGESTS file containing the hash output from any of the supported
# options below.  Adding them all may take a long time.
# Supported options: sha1, sha224, ripemd128, ripemd320, sha384, crc32,
#	ripemd256, sha256, sha512, ripemd160, md5
digests="md5 sha1"

# Creates a .CONTENTS file listing the contents of the file. Pick from any of
# the supported options below:
# auto		- strongly recommended
# tar-tv	- does 'tar tvf FILE'
# tar-tvz	- does 'tar tvzf FILE'
# tar-tvy	- does 'tar tvyf FILE'
# isoinfo-l	- does 'isoinfo -l -i FILE'
# isoinfo-f	- does 'isoinfo -f -i FILE'
# 'isoinfo-f' is the only option not chosen by the automatic algorithm.
# If this variable is empty, no .CONTENTS will be generated at all.
contents="auto"

# distdir specifies where your distfiles are located. This setting should
# work fine for most default installations.
distdir="/usr/portage/distfiles"

# envscript allows users to set options such as http proxies, MAKEOPTS,
# GENTOO_MIRRORS, or any other environment variables needed for building.
# The envscript file sets environment variables like so:
# export FOO="bar"
envscript="/etc/catalyst/catalystrc"

# Internal hash function catalyst should use for things like autoresume, 
# seedcache, etc.  The default and fastest is crc32.  You should not ever need
# to change this unless your OS does not support it.
# Supported options: sha1, sha224, ripemd128, ripemd320, sha384, crc32,
#	ripemd256, sha256, sha512, ripemd160, md5
hash_function="crc32"

# options set different build-time options for catalyst. Some examples are:
# autoresume = Attempt to resume a failed build, clear the autoresume flags with
#	the -a option to the catalyst cmdline.  -p will clear the autoresume flags
#	as well as your pkgcache and kerncache
#	( This option is not fully tested, bug reports welcome )
# ccache = enables build time ccache support (highly recommended)
# distcc = enable distcc support for building. You have to set distcc_hosts in
# 	your spec file.
# icecream = enables icecream compiler cluster support for building
# kerncache = keeps a tbz2 of your built kernel and modules (useful if your
#	build stops in livecd-stage2)
# metadata_overlay = enabled the metadata_overlay cache module in portage, which
#	uses the in-tree metadata
# pkgcache = keeps a tbz2 of every built package (useful if your build stops
#	prematurely)
# seedcache = use the build output of a previous target if it exists to speed up
#	the copy
# snapcache = cache the snapshot so that it can be bind-mounted into the chroot.
#	WARNING: moving parts of the portage tree from within fsscript *will* break
#	your cache. The cache is unlinked before any empty or rm processing, though.
#
# (These options can be used together)
options="autoresume kerncache metadata_overlay pkgcache seedcache snapcache"

# portdir specifies the source portage tree used by the snapshot target.
portdir="/usr/portage"

# sharedir specifies where all of the catalyst runtime executables are. Most
# users do not need to change this.
sharedir="/usr/lib/catalyst"

# snapshot_cache specifies where the snapshots will be cached to if snapcache is
# enabled in the options.
snapshot_cache="/var/tmp/catalyst/snapshot_cache"

# storedir specifies where catalyst will store everything that it builds
# storedir="/home/mirror/linux"
# KEEP THIS SET TO /var/tmp/catalyst for now, until the code is fixed (again) (urg)
storedir="/var/tmp/catalyst"

# workdir specifies where catalyst will store its temporary files and caches
workdir="/var/tmp/catalyst"

