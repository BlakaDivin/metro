# ChangeLog for metro 
# Copyright 2008-2009 Funtoo Technologies, LLC; Distributed under the GPL v2
# Portions Copyright 1999-2007 Gentoo Foundation;

*metro-1.2 (15 Dec 2008)

  15 Dec 2008; Daniel Robbins <drobbins@funtoo.org>: New release:
  The 1.2 release contains quite a few improvements:
  * NEW target: "stage3-freshen" uses emerge -up world to update stage
  * NEW target: "stage3-quick" builds stage3->stage3, skipping stage1 and 2.
  * NEW target: "git-snapshot" creates a full .tar.bz2 snapshot of git repo
    with the .git directory intact, so it is a full working git repo when
    unpacked.
  * NEW target: "emerge" for adding packages to an existing stage3
  * NEW subarch: ~core2 for Intel Core 2 series processors. Supported with
    gcc 4.3.2 which is in the funtoo build.
  * Updated targets: "openvz" updated to support OpenRC 0.4.0.
  * stage3-freshen supports emerge/packages/force target, which is a list
    of packages to rebuild using "emerge <packages>". This is a great way
    to force a rebuild of packages that may need to be rebuilt but did not
    get a rev-bump (ie. openrc.:)
  * Metro now properly cleans /var/tmp/metro after it is done, unless the
    build aborted due to an error.
  * scripts/build.sh: now supports stage3-freshen and stage3-quick by
    allowing an extra "quick" or "freshen" option as the last argument.
  * scripts/build.sh: now creates a "current" symlink pointing to the most
    recent stage3 built. This "current" symlink exists in the subarch
    directory and the filename is "stage3-subarch-current.tar.bz2."
  * scripts/build.sh: now uses "git-snapshot" for funtoo builds, so funtoo
    snapshots are now double the size but are a full working and "git pull"-
    able git repo, simplifying funtoo install process.
  * stage3 targets: try to ensure that /etc/make.conf.example exists.
    Create a symlink from /etc/make.conf.example to
    /usr/share/portage/config/make.conf.example.
  * metro core: robust mount point detection using /proc/mounts instead of
    output from the mount command, which can be unreliable.
  * metro core: more robust umount algorithm.
  * metro core: local name support, so your custom stages don't need to be
    called "funtoo" anymore. Also quite useful with the "emerge" target for
    creating custom stage3's with different names.
  * metro core: ccache works correctly, but has been disabled by default as
    it may cause build failures when used with Portage parallel merges
    (--jobs) and we now have "stage3-freshen" and "stage3-quick" when we need
    a stage3 built quickly.
  * parser syntax: For conditionals, the "in" keyword is now supported as
    an equivalent for "is".
  * parser syntax: New "lax" expansion method, ie: $[foo:lax] will expand
    to foo if it is defined, otherwise it will not throw a parser error
    (as it normally would) and instead expand to a dummy value which may
    contain spaces.
  * Documentation: github wiki documentation updated to reflect new features
    and QuickStart Guide refined to be easier to understand.
  * Projects: new projects/ directory contains source code for funtoo.org
    Web site. Funtoo.org Web site redesigned to be more of a portal for new
    Funtoo builds. The funtoo Web site can be generated by running
    "pytext index.html" (sent to stdout.) Embedded python code automatically
    updates Web site symlinks to point to most recent versions of builds
    and list relevant build-related information. Support for displaying
    build dates in human-parseable form (ie. "Yesterday" or "2 Days Ago".)

*metro-1.1 (04 Nov 2008)

  04 Nov 2008; Daniel Robbins <drobbins@funtoo.org>: New release:
  * Reorganized /etc/metro directory
  * NEW: "Builds" defined in /etc/metro/builds/ - all key build information
    now in a single file for convenience.
  * NEW: "FSLayouts" defined in /etc/metro/fslayouts/ - all mirror-related
    file names and path structures now in a single file.
  * NEW: OpenVZ template support for Funtoo stages, enabled in 
    scripts/build.sh
  * NEW: Reorganized file paths inside /usr/lib/metro.
  * NEW: Working gentoo/emerge target, when you just want to take a stage3
    and create something new by emerging stuff in it.
  * NEW: Targets now have an OS prefix. What was target: snapshot is now
    target: gentoo/snapshot, etc. The path structure in /usr/lib/metro has
    also been improved so that people can easily create a
    /usr/lib/metro/targets/myos/ directory and start hacking.
  * NEW: Several parser bug fixes
  * FIX: Improvements to metro have allowed scripts/build.sh to be simplified.
  * NEW: Improved error and exception handling
  * NEW: Enhanced Portage git snapshot support - Metro will now keep a
    local cache of a git repository so it doesn't need to re-clone it
    every time, saving bandwidth. This cache location is defined in the
    path/cache/git variable in /etc/metro/metro.conf.
  * Embedded Python interpreter can no longer reference Metro metadata
    directly. This prevents weird side-effects from occurring.
  * NEW: Conditional expansion - a variable such as $[foo?] will get
    expanded to "yes" if defined and "no" if not defined, providing
    easy integration with scripts so you don't throw a parser exception
    by referencing an undefined variable.
  * NEW: "zap" expansion - in a multi-line element, a variable such 
    as $[foo:zap] will get expanded to the name of the variable if it is
    defined. If it is not defined, however, then the entire line will
    be deleted from the output. This allows very compact conditional
    lines in templates like this:
    CFLAGS=$[portage/CFLAGS:zap]
  * FIX: MAKEOPTS now properly applied to Gentoo builds, speeding up
    builds on multi-core systems significantly.
  * NEW: [options parse/lax] and [options parse/strict] to disable and
    enable strict parsing, respectively. When lax parsing is enabled,
    any referenced undefined variables in multi-line elements will get
    dummy values, but an exception will not be thrown.
  * NEW: conditonal sections - it's now possible to write:
    [section foo when bar]
    This is equivalent to the old:
    [section foo]
    [when bar]
  * NEW: conditional equality - it's now possible for all conditionals
    to test for equality, such as:
    [section foo when bar is oni]
    or
    [when bar is oni]
  * NEW: conditional list-match - it's now possible to see if an element
    matches a list of values, such as:
    [section foo when target/subarch is x86 amd64 pentium4]
    This section will be active if target/subarch has a value that matches
    one of the specified values.
  * CHANGE: multi-line elements that are referenced inside other multi-line
    elements, using the syntax $[[foo]], will only get expanded if they
    appear at the beginning of the line. This allows them to easily be
    commented out by prefixing them by a "#" or any other character. In this
    case, the $[[foo]] will not be expanded and will be passed to the output
    as-is.
  * CHANGE: path/mirror/srcstage and path/mirror/deststage have been
    renamed to /path/mirror/source and path/mirror/target respectively.
